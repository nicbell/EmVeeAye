plugins {
    alias libs.plugins.android.library
    alias libs.plugins.kotlin.android
    id 'maven-publish'
    id 'signing'
}
android {
    namespace 'net.nicbell.emveeaye.test'
    compileSdk compile_sdk_version

    defaultConfig {
        minSdk min_sdk_version
        targetSdk target_sdk_version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation libs.junit
    implementation libs.turbine
    implementation libs.kotlinx.coroutinestest
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                pom {
                    name = "EmVeeAye"
                    description = "Some kinda MVI üèÑüèΩ"
                    url = "https://github.com/nicbell/EmVeeAye"
                    licenses {
                        license {
                            name = "The Apache Software License, Version 2.0"
                            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }
                    developers {
                        developer {
                            id = 'nicbell'
                            name = 'Nic Bell'
                        }
                    }
                    scm {
                        url = "https://github.com/nicbell/EmVeeAye"
                        connection = "scm:git://github.com/nicbell/EmVeeAye.git"
                    }
                }
            }
        }
        repositories {
            configure(mavenGitHub)
            configure(mavenSonaTypeSnapshots)
            configure(mavenSonaTypeStaging)
        }
    }

    signing {
        useInMemoryPgpKeys(signingKeyId, signingKey, signingKeyPassword)
        sign publishing.publications.release
    }
}